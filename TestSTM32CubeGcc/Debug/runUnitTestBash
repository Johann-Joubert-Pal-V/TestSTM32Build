#!/bin/bash

echo "set PC-LINT configuration"

#PC LINT CONFIGURATION
export PC_LINT_LOC=/opt/PC-LINT/config
export PC_LINT_LNT_LOC=/opt/PC-LINT/lnt
export PC_LINT_PROJECT_CONFIG=./project_config.lnt

#Temporary filename for imposter log
export IMPOSTER_LOG=./imposter_log.txt
export PC_LINT_ANALYSIS_FILE=./analysis.log

#Bullseye Configuration
export BULLSEYE_LOC=/opt/BullseyeCoverage/bin
export COVFILE=Test.cov
export COV_HTML_OUTPUT=./cov_html_output
export PATH=$PATH:$BULLSEYE_LOC

echo $PATH


echo $PC_LINT_LOC
echo $PC_LINT_PROJECT_CONFIG
echo $IMPOSTER_LOG
echo $PC_LINT_ANALYSIS_FILE

#cleanup files
rm $PC_LINT_PROJECT_CONFIG
rm $PC_LINT_ANALYSIS_FILE
rm $IMPOSTER_LOG
rm $COVFILE
rm $IMPOSTER_LOG
#del %PROJECT_CONFIG%

rm -rf /s /q %COV_HTML_OUTPUT%

pipenv run pip3 install regex
pipenv run pip3 install pyyaml

#Generate PC-LINT compiler configuration
pipenv run $PC_LINT_LOC/pclp_config.py --compiler=gcc --compiler-bin=/usr/bin/gcc --config-output-lnt-file=co-gcc.lnt --config-output-header-file=co-gcc.h --generate-compiler-config
#Compile PC-LINT imposter compiler
gcc $PC_LINT_LOC/imposter.c -o imposter 

make clean
#make -e CC=$PC_LINT_LOC/imposter -B TestSTM32CubeGcc
make -e CC=./imposter -B TestSTM32CubeGcc


pipenv run $PC_LINT_LOC/pclp_config.py --compiler=gcc --imposter-file=$IMPOSTER_LOG --config-output-lnt-file=$PC_LINT_PROJECT_CONFIG --generate-project-config
/opt/PC-LINT/pclp64_linux -max_threads=4 -os=$PC_LINT_ANALYSIS_FILE -vf co-gcc.lnt env-jenkins.lnt $PC_LINT_PROJECT_CONFIG $PC_LINT_LNT_LOC/au-misra3.lnt $PC_LINT_LNT_LOC/au-misra3-amd1.lnt $PC_LINT_LNT_LOC/au-misra3-amd2.lnt 
#/opt/PC-LINT/pclp64_linux -max_threads=4 -os=$PC_LINT_ANALYSIS_FILE co-gcc.lnt env-jenkins.lnt $PC_LINT_PROJECT_CONFIG


$BULLSEYE_LOC/cov01 --on
make -e CC="$BULLSEYE_LOC/covc -i $BULLSEYE_LOC/gcc" -B TestSTM32CubeGcc
./TestSTM32CubeGcc xml out
$BULLSEYE_LOC/cov01 --off
echo START BULLSEYE HTML REPORT
/opt/bullshtml/bullshtml -f $COVFILE cov_html_output
#/opt/BullseyeCoverage/bin/covhtml --file $COVFILE $COV_HTML_OUTPUT
#/opt/BullseyeCoverage/bin/covxml --xsl --file $COVFILE -o $COV_HTML_OUTPUT/clover.xml
echo STOP BULLSEYE HTML REPORT
